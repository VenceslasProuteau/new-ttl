{"version":3,"sources":["commons/authentication/auth-token.service.js","commons/api/api.service.js","commons/user/user.api.js","commons/data-store/localstorage.service.js","commons/data-store/data-store.model.js","commons/user/user.service.js","commons/authentication/authentication.api.js","commons/authentication/authentication.service.js","commons/spinner/spinner.component.js","commons/authentication/authentication.component.js","commons/forms/field-error.component.js","commons/forms/validators.js","modules/team/team.service.js","modules/team/team.api.js","modules/team/team.page.js","commons/schedule/schedule.service.js","commons/schedule/schedule.api.js","modules/decks/route-paths.js","modules/decks/Decks.jsx","commons/players/players.service.js","commons/players/players.api.js","modules/decks/DecksSelection.jsx","modules/decks/route.js","modules/login/login.page.js","modules/signup/signup.page.js","routes.js","modules/dashboard/dashboard.page.js","modules/decks/main-template.jsx","commons/sidebar/sidebar.component.js","App.js","index.js"],"names":["AuthTokenService","getAuthToken","Cookies","get","ApiService","call","config","axios","url","method","then","result","callAuth","token","this","headers","Promise","reject","reason","AuthTokenServiceModule","UserApi","getSelfUser","ApiServiceModule","isLocalStorageEnabled","mod","window","localStorage","setItem","removeItem","e","key","getObject","val","undefined","JSON","parse","error","maybeJSONParse","getItem","setLocalStorage","id","value","object","stringify","setObject","getLocalStorage","DataStore","store","_","isEmpty","newStore","isSaved","UserService","user","resolve","data","set","resetStore","reset","UserApiModule","AuthApi","login","signUp","AUTH_TOKEN","ClientStore","clientCache","AuthService","getDomain","location","hostname","split","slice","join","logout","remove","domain","expires","catch","response","isAuthenticated","AuthApiModule","Spinner","className","withAuth","Component","props","state","isLoading","history","replace","pathname","APP_STATES","LOGIN","path","search","setState","React","FieldErrorMessage","name","when","message","subscription","submitFailed","active","render","meta","indexOf","EMAIL_PATTERN","composeValidators","validators","reduce","validator","required","pattern","regexp","RegExp","test","passwordMinLength","length","TeamService","TeamApi","create","teamId","Team","createTeam","bind","team","isNotTeamMember","form","isCreationSuccessfull","onSubmit","handleSubmit","autoComplete","validate","input","type","placeholder","users","map","username","isOwner","ScheduleService","getSchedule","date","storedDate","storedDateSchedule","schedule","PATH_PREFIX","DECK_STATES","HOME","SELECTION","Decks","currentDate","format","Date","now","games","console","log","gameId","push","reverse","awayTeam","homeTeam","onClick","selectGame","fullName","src","logo","PlayersService","storedPlayers","players","getPlayers","DecksSelection","params","match","currentGame","find","parseInt","promises","all","homePlayers","awayPlayers","pictureUrl","DECK_ROUTES","exact","component","withRouter","ERROR_MESSAGES","NOT_EXISTING_USER","INVALID_PASSWORD","LoginPage","redirectUrl","qs","onLogin","href","origin","to","USER_EXISTING","TECHNICAL_ERROR","SignUpPage","signup","isAccountCreated","Fragment","SIGNUP","DECKS","values","route","i","TEAM","SidebarComponent","isMenuToggled","toggleMenu","classNames","activeClassName","Sidebar","App","Object","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.52db51ae.chunk.js","sourcesContent":["import Cookies from 'js-cookie';\nconst AUTH_TOKEN = 'authToken';\n\nfunction AuthTokenMethod() {\n  return {\n    getAuthToken() {\n      return Cookies.get(AUTH_TOKEN)\n    }\n  }\n}\n\nexport const AuthTokenService = new AuthTokenMethod();\n","import axios from 'axios';\nimport { AuthTokenService as AuthTokenServiceModule} from '../authentication/auth-token.service';\n\nconst BASE_URL = '/api/v1';\n\nfunction ApiServiceMethod(AuthTokenService) {\n  return {\n    call(config){\n      return axios({ ...config, url: `${BASE_URL}${config.url}`, method: config.method || 'GET' })\n        .then((result = {}) => result);\n    },\n    callAuth(config) {\n      const token = AuthTokenService.getAuthToken();\n      if (!token) {\n        return Promise.reject({ reason: 'NOT_AUTHENTICATED'});\n      }\n      return this.call({\n        ...config,\n        headers: { ...config.headers, token }\n      });\n    }\n  }\n};\n\nexport const ApiService = new ApiServiceMethod(AuthTokenServiceModule);\n","import { ApiService as ApiServiceModule} from '../api/api.service';\n\nfunction UserApiMethod(ApiService) {\n  return {\n    getSelfUser() {\n      return ApiService.callAuth({\n        method: 'GET',\n        url: '/user/me',\n      });\n    }\n  }\n};\n\nexport const UserApi = new UserApiMethod(ApiServiceModule);\n","function isLocalStorageEnabled() {\n  let mod;\n  try {\n    window.localStorage.setItem(mod, mod);\n    window.localStorage.removeItem(mod);\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction maybeJSONParse(val) {\n  if (val === undefined) {\n    return undefined;\n  }\n  try {\n    return JSON.parse(val);\n  } catch (error) {\n    return null;\n  }\n}\n\nfunction removeItem(key) {\n  if (isLocalStorageEnabled()) {\n    return window.localStorage.removeItem(key);\n  }\n}\n\nfunction getObject(key) {\n  if (isLocalStorageEnabled()) {\n    return maybeJSONParse(localStorage.getItem(key));\n  }\n}\n\nfunction setObject(key, object) {\n  if (object === undefined) {\n    return removeItem(key);\n  }\n  if (isLocalStorageEnabled()) {\n    window.localStorage.setItem(key, JSON.stringify(object));\n  }\n}\n\nfunction getItem(key) {\n  if (isLocalStorageEnabled()) {\n    return window.localStorage.getItem(key);\n  }\n}\n\nfunction setItem(key, item) {\n  if (isLocalStorageEnabled()) {\n    window.localStorage.setItem(key, item);\n  }\n}\n\nfunction cleanSaveItem(key, item) {\n  item ? setItem(key, item) : removeItem(key);\n}\n\nexport {\n  getObject, setObject, getItem, setItem, removeItem, cleanSaveItem,\n};\n","import _ from 'lodash';\nimport { getObject, setObject } from './localstorage.service';\n\nconst setLocalStorage = (id, value) => setObject(id, value);\nconst getLocalStorage = (id) => getObject(id);\n\n/* istanbul ignore file */\nexport class DataStore {\n  constructor(id) {\n    this.id = id;\n    this.store = getLocalStorage(this.id) || {}; // do not use directly, no private property in JS\n  }\n\n  get() {\n    const store = _.isEmpty(this.store) ? getLocalStorage(this.id) : this.store;\n    this.store = store;\n\n    return { ...this.store };\n  }\n\n  set(newStore, isSaved) {\n    this.store = { ...this.store, ...newStore };\n    isSaved && setLocalStorage(this.id, this.store);\n  }\n\n  reset() {\n    this.store = {};\n    setLocalStorage(this.id, this.store);\n  }\n}\n","import { UserApi as UserApiModule} from './user.api';\nimport { DataStore } from '../data-store/data-store.model';\n\nfunction UserServiceMethod(UserApi) {\n  const store = new DataStore('SELF_USER');\n  return {\n    getSelfUser() {\n      const user = store.get().user;\n      return user ? Promise.resolve(user) : UserApi.getSelfUser()\n        .then(({ data } = {}) => {\n          store.set({ user: data }, true);\n          return data;\n        });\n    },\n    resetStore() {\n      return store.reset();\n    }\n  }\n};\n\nexport const UserService = new UserServiceMethod(UserApiModule);\n","import { ApiService as ApiServiceModule } from '../api/api.service';\n\nfunction AuthApiMethod(ApiService) {\n  return {\n    login(data) {\n      return ApiService.call({\n        method: 'POST',\n        url: '/user/login',\n        data,\n      });\n    },\n    signUp(data) {\n      return ApiService.call({\n        method: 'POST',\n        url: '/user/signup',\n        data,\n      });\n    } \n  }\n}\n\nexport const AuthApi = new AuthApiMethod(ApiServiceModule);\n","import Cookies from 'js-cookie';\nimport { UserService } from '../user/user.service';\nimport { AuthApi as AuthApiModule } from './authentication.api';\n\nconst AUTH_TOKEN = 'authToken';\n\nclass ClientStore {\n  constructor() {\n    this.clientCache = {};\n  }\n\n  get() {\n    return this.clientCache;\n  }\n\n  set(data = {}) {\n    this.clientCache = { ...this.clientCache, ...data };\n  }\n\n  reset() {\n    this.clientCache = {};\n  }\n}\n\n\nfunction AuthServiceMethod(AuthApi) {\n  const store = new ClientStore();\n\n  return {\n    getDomain(){\n      window.location.hostname.split('.').slice(-2).join('.');\n    },\n    logout() {\n      UserService.resetStore();\n      Cookies.remove(AUTH_TOKEN, { domain: this.getDomain() });\n      store.reset();\n    },\n    login(data) {\n      UserService.resetStore();\n      return AuthApi.login(data)\n        .then(({ data: { token } } = {}) => {\n          Cookies.set(AUTH_TOKEN, token, {\n            expires: 30,\n            domain: this.getDomain(),\n          });\n        }).catch(({ response: { data } } = {}) => Promise.reject(data))\n    },\n    signUp(data) {\n      return AuthApi.signUp(data)\n        .catch(({ response: { data } } = {}) => Promise.reject(data))\n    },\n    isAuthenticated() {\n      return !!Cookies.get(AUTH_TOKEN)\n    }\n  }\n}\n\nexport const AuthService = new AuthServiceMethod(AuthApiModule);\n","import React from 'react';\nimport './spinner.scss';\n\nexport const Spinner = () => (\n  <div className=\"spinner-container\">\n    <div className=\"spinner\" />\n  </div>\n)","import React from 'react';\nimport { Spinner } from 'commons/spinner/spinner.component';\nimport { AuthService } from './authentication.service';\nimport { UserService } from '../user/user.service';\nimport { APP_STATES } from 'app/routes';\nimport '../../app.scss';\n\nexport const withAuth = Component => class Authentication extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: false,\n    }\n  }\n\n  componentDidMount() {\n    if (!AuthService.isAuthenticated()) {\n      this.props.history.replace({\n        pathname: APP_STATES.LOGIN.path,\n        search: `?redirectUrl=${this.props.location.pathname}`,\n      });\n      return null;\n    }\n    this.setState({ isLoading: false });\n  }\n\n  render() {\n    return this.state.isLoading ? <Spinner /> : <Component {...this.props} />\n    // <React.Fragment>\n    //   <div className=\"app__menu-toggle\"></div>\n    //   <Sidebar />\n    //   <div className=\"app\">\n    //     <div className=\"layout-container\">\n    //       <Component {...props} />\n    //     </div>\n    //   </div>\n    // </React.Fragment>\n  }\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Field, FormSpy } from 'react-final-form';\nimport './field-error.scss';\n\nexport const FieldErrorMessage = ({ name = [], when = [], message = '' }) => (\n  <Field\n    name={name}\n    subscription={{ submitFailed: true, error: true, active: true }}\n    render={({ meta: { submitFailed, error, active } }) => (\n      !active && submitFailed && error && (when ? when.indexOf(error) >= 0 : true)\n        ? <span className=\"form-error-message\">{message || error}</span> : null\n    )}\n  />\n);\n","export const EMAIL_PATTERN = /.+@.+\\..+/;\nexport const PHONE_PATTERN = /^$|^0[12345679][0-9]{8}$/;\n\nexport const composeValidators = (...validators) => (\n  (value) => validators.reduce((error, validator) => error || validator(value), undefined)\n);\n\n// validators\nexport const required = (value) => (value ? undefined : 'required');\n\nexport const pattern = (regexp) => (value = '') => (new RegExp(regexp).test(value) ? undefined : 'pattern');\n\nexport const passwordMinLength = value => value.length < 9 ? 'passwordLength' : undefined;\n","import { TeamApi, TeamApi as TeamApiModule } from './team.api';\n\nfunction TeamServiceMethod(TeamApi) {\n  return {\n    create(data) {\n      return TeamApi.create(data)\n        .then(({ data } = {}) => data);\n    },\n    get(teamId) {\n      return TeamApi.get(teamId)\n        .then(({ data } = {}) => data);\n    }\n  }\n}\nexport const TeamService = new TeamServiceMethod(TeamApi);","import { ApiService as ApiServiceModule } from 'commons/api/api.service';\n\nfunction TeamApiMethod(ApiService) {\n  return {\n    create(data) {\n      return ApiService.callAuth({\n        method: 'POST',\n        url: '/team/create',\n        data\n      });\n    },\n    get(teamId) {\n      return ApiService.callAuth({\n        method: 'GET',\n        url: `/team/${teamId}`,\n      });\n    }\n  };\n}\n\nexport const TeamApi = new TeamApiMethod(ApiServiceModule);","import React from 'react';\nimport { Form, Field } from 'react-final-form';\nimport { FieldErrorMessage } from 'commons/forms/field-error.component';\nimport {\n  composeValidators,\n  required,\n} from 'commons/forms/validators';\nimport classNames from 'classnames';\nimport { Spinner } from 'commons/spinner/spinner.component';\nimport { UserService } from 'commons/user/user.service';\nimport { TeamService } from './team.service';\nimport './team.scss';\n\nexport class Team extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n    };\n    this.createTeam = this.createTeam.bind(this);\n  }\n\n  componentDidMount() {\n    return UserService.getSelfUser()\n      .then(({ team = {} } = {}) => {\n        if (!team.id) {\n          return this.setState({ isNotTeamMember: true, isLoading: false });\n        }\n\n        return TeamService.get(team.id)\n          .then((team) => {\n            this.setState({ team, isLoading: false });\n          });\n      });\n  }\n\n  createTeam(form) {\n    this.setState({ isLoading: true });\n    return TeamService.create(form)\n      .then(({ id }) => TeamService.get(id)\n        .then((team) => {\n          this.setState({\n            isLoading: false,\n            isNotTeamMember: false,\n            isCreationSuccessfull: true,\n            team,\n          });\n        })).catch(({ error }) => this.setState({ error, isLoading: false }));\n  }\n\n  render() {\n    return this.state.isLoading ? <Spinner /> : (\n      <div className=\"page\">\n        <div className=\"page__header\">\n        <div className=\"page__header-col\">\n          Mon équipe\n        </div>\n        </div>\n        <div className=\"page__content\">\n          <div className=\"team__block\">\n            {this.state.isNotTeamMember ? (\n              <Form \n                onSubmit={this.createTeam}\n                render={({\n                  handleSubmit,\n                }) => (\n                  <form onSubmit={handleSubmit} autoComplete=\"off\" className=\"form form--dark\">\n                    <Field name=\"name\" validate={composeValidators(required)}>\n                      {({ input }) => (\n                        <input\n                          {...input}\n                          type=\"text\"\n                          placeholder=\"Nom de mon équipe\"\n                          name=\"name\"\n                        />\n                      )}\n                    </Field>\n                    <div className=\"form-error-message\">\n                      <FieldErrorMessage\n                        name=\"email\"\n                        when={['required']}\n                        message=\"Un nom d'équipe est requis\"\n                      />\n                      {/* {this.state.error && (\n                        <span>{ERROR_MESSAGES[this.state.error]}</span>\n                      )} */}\n                    </div>\n                    <button className=\"button\" type=\"submit\">\n                      Créer mon équipe\n                    </button>\n                  </form>\n                )}\n              />\n            ) : (\n              <div>\n                {this.state.team.name}\n                {this.state.team.users.map(({ username, isOwner }) => (\n                  <div>{username}{isOwner && (' (admin)')}</div>\n                ))}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}","import _ from 'lodash';\nimport { DataStore } from 'commons/data-store/data-store.model';\nimport { getSchedule } from './schedule.api';\n\nfunction ScheduleServiceMethod() {\n  const store = new DataStore('SCHEDULE');\n\n  return {\n    getSchedule(date) {\n      const storedDate = date.replace(/-/ig, '');\n      const storedDateSchedule = _.get(store.get().schedule, storedDate);\n\n      return storedDateSchedule\n        ? Promise.resolve(storedDateSchedule) \n        : getSchedule(date)\n            .then(schedule => {\n              store.set({\n                schedule: { [storedDate]: schedule },\n              });\n              return schedule;\n            });\n    },\n  }\n};\n\nexport const ScheduleService = new ScheduleServiceMethod();","import { ApiService } from 'commons/api/api.service';\n\nconst getSchedule = (date) => {\n  return ApiService.call({\n    url: `/schedule/${date}`,\n  }).then(({ data }) => data)\n    .catch(e => e);\n};\n\nexport {\n  getSchedule,\n};\n","const PATH_PREFIX = '/decks';\n\nexport const DECK_STATES = {\n  HOME: `${PATH_PREFIX}`,\n  SELECTION: `${PATH_PREFIX}/:date/:gameId`,\n}\n","import React from 'react';\nimport format from 'date-fns/format'\nimport { reverse } from 'named-urls';\n\nimport { Spinner } from 'commons/spinner/spinner.component';\nimport { ScheduleService } from 'commons/schedule/schedule.service';\nimport { DECK_STATES } from './route-paths';\n\nexport class Decks extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      currentDate: format(Date.now(), 'yyyy-MM-dd'),\n    };\n  }\n\n  componentDidMount() {\n    return ScheduleService.getSchedule(this.state.currentDate)\n      .then((games) => {\n        this.setState({\n          isLoading: false,\n          games,\n        });\n      }).catch((e) => console.log('e', e));\n  }\n\n  selectGame(gameId) {\n    return this.props.history.push(reverse(DECK_STATES.SELECTION, {\n      gameId,\n      date: this.state.currentDate,\n    }));\n  }\n\n  render() {\n    return (\n      this.state.isLoading ?\n        <Spinner /> :\n        <div className=\"decks__games-card\">\n          {this.state.games.map(({\n            awayTeam,\n            homeTeam,\n            id,\n            date,\n          }) =>\n            <div className=\"decks__game-card\" key={id} onClick={() => this.selectGame(id)}>\n              <div className=\"decks__game-arena\">\n                <span>{date}</span>\n              </div>\n              <div className=\"decks__game-card-wrapper\">\n                <div className=\"decks__game-card-col\">\n                  <span className=\"decks__game-card-team\">{homeTeam.fullName}</span>\n                  <div className=\"decks__game-card-logo\">\n                    <img src={homeTeam.logo}></img>\n                  </div>\n                </div>\n                <div className=\"decks__game-card-middle\">\n                  VS\n                </div>\n                <div className=\"decks__game-card-col\">\n                  <div className=\"decks__game-card-logo\">\n                    <img src={awayTeam.logo}></img>\n                  </div>\n                  <span className=\"decks__game-card-team\">{awayTeam.fullName}</span>\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n    )\n  }\n}\n","import _ from 'lodash';\nimport { DataStore } from 'commons/data-store/data-store.model';\nimport { getPlayers } from './players.api';\n\nfunction PlayersServiceMethod() {\n  const store = new DataStore('PLAYERS');\n\n  return {\n    get(teamId) {\n      const storedPlayers = _.get(store.get().players, teamId);\n\n      return storedPlayers\n        ? Promise.resolve(storedPlayers) \n        : getPlayers(teamId)\n            .then(players => {\n              store.set({\n                players: { [teamId]: players },\n              });\n              return players;\n            });\n    },\n  }\n};\n\nexport const PlayersService = new PlayersServiceMethod();","import { ApiService } from 'commons/api/api.service';\n\nconst getPlayers = (teamId) => {\n  return ApiService.call({\n    url: `/players/${teamId}`,\n  }).then(({ data }) => data)\n    .catch(e => e);\n};\n\nexport {\n  getPlayers,\n};\n","import React from 'react';\nimport _ from 'lodash';\nimport { Spinner } from 'commons/spinner/spinner.component';\nimport { PlayersService } from 'commons/players/players.service';\nimport { ScheduleService } from 'commons/schedule/schedule.service';\n\nexport class DecksSelection extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n    };\n    this.params = props.match.params;\n  }\n\n  componentDidMount() {\n    return ScheduleService.getSchedule(this.params.date)\n      .then((schedule = []) => {\n        const currentGame = _.find(schedule, { id: parseInt(this.params.gameId, 10) });\n        const promises = _.map([currentGame.homeTeam, currentGame.awayTeam], ({ key }) => PlayersService.get(key));\n        return Promise.all(promises)\n          .then(([homePlayers, awayPlayers]) => this.setState({\n            homePlayers,\n            awayPlayers,\n            currentGame,\n            isLoading: false,\n          }));\n      });\n  }\n\n  render() {\n    return this.state.isLoading ?\n      <Spinner /> : (\n      <div className=\"decks__selection\">\n        <div className=\"decks__game-card\">\n          <div className=\"decks__game-arena\">\n            <span>{this.state.currentGame.date}</span>\n          </div>\n          <div className=\"decks__game-card-wrapper\">\n            <div className=\"decks__game-card-col\">\n              <span>{this.state.currentGame.homeTeam.fullName}</span>\n              <div className=\"decks__game-card-logo\">\n                <img src={this.state.currentGame.homeTeam.logo}></img>\n              </div>\n            </div>\n            <div className=\"decks__game-card-middle\">\n              VS\n            </div>\n            <div className=\"decks__game-card-col\">\n              <div className=\"decks__game-card-logo\">\n                <img src={this.state.currentGame.awayTeam.logo}></img>\n              </div>\n              <span>{this.state.currentGame.awayTeam.fullName}</span>\n            </div>\n          </div>\n        </div>\n        <div className=\"decks__players\">\n          <div className=\"decks__players-col\">\n            {this.state.homePlayers\n              .map(({ name, pictureUrl }) => (\n                <div className=\"decks__player-card\">\n                  <div className=\"decks__player-card__name\">\n                    {name}\n                  </div>\n                  <div className=\"decks__player-card__picture\">\n                    <img src={pictureUrl}></img>\n                  </div>\n                </div>\n              ))\n            }\n          </div>\n          <div className=\"decks__players-col\">\n            {this.state.awayPlayers\n              .map(({ name, pictureUrl }) => (\n                <div className=\"decks__player-card\">\n                  <div className=\"decks__player-card__name\">\n                    {name}\n                  </div>\n                  <div className=\"decks__player-card__picture\">\n                    <img src={pictureUrl}></img>\n                  </div>\n                </div>\n              ))\n            }\n          </div>\n        </div>\n      </div>\n    )\n  }\n}","import { withRouter } from 'react-router-dom';\nimport { Decks } from './Decks';\nimport { DecksSelection } from './DecksSelection';\nimport { DECK_STATES } from './route-paths';\n\nexport const DECK_ROUTES = {\n  HOME: {\n    path: DECK_STATES.HOME,\n    exact: true,\n    component: withRouter(Decks)\n  },\n  SELECTION: {\n    path: DECK_STATES.SELECTION,\n    component: withRouter(DecksSelection),\n  }\n}","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Form, Field } from 'react-final-form';\nimport qs from 'query-string';\nimport { Spinner } from 'commons/spinner/spinner.component';\nimport { FieldErrorMessage } from 'commons/forms/field-error.component';\nimport {\n  composeValidators,\n  pattern,\n  required,\n  EMAIL_PATTERN\n} from 'commons/forms/validators';\nimport { AuthService } from 'commons/authentication/authentication.service';\nimport { UserService } from 'commons/user/user.service';\nimport { APP_STATES } from 'app/routes';\nimport './login.scss';\n\nconst ERROR_MESSAGES = {\n  NOT_EXISTING_USER: \"L'email renseigné n'existe pas\",\n  INVALID_PASSWORD: \"Le mot de passe renseigné est incorrect\"\n}\n\nexport class LoginPage extends Component {\n  constructor(props) {\n    super(props);\n    this.redirectUrl = qs.parse(props.location.search).redirectUrl;\n    this.onLogin = this.onLogin.bind(this);\n    this.state = {\n      error: false,\n    };\n  }\n  \n  onLogin(data) {\n    this.setState({ isLoading: true });\n    return AuthService.login(data)\n      .then(() => {\n        return UserService.getSelfUser()\n          .then(() => {\n            if (!this.redirectUrl) {\n              return this.props.history.replace(APP_STATES.HOME.path);\n            }\n            window.location.href = `${window.location.origin}${this.redirectUrl}`;\n          });\n      }).catch(({ error }) => this.setState({ error, isLoading: false }));\n  }\n\n  render() {\n    return this.state.isLoading ? <Spinner /> : (\n      <div className=\"authent-page\">\n        <div className=\"authent-page__form-container\">\n          <Form\n            onSubmit={this.onLogin}\n            render={({\n              handleSubmit,\n            }) => (\n              <form onSubmit={handleSubmit} autoComplete=\"off\" className=\"form\">\n                <Field name=\"email\" validate={composeValidators(required, pattern(EMAIL_PATTERN))}>\n                  {({ input }) => (\n                    <input\n                      {...input}\n                      type=\"email\"\n                      placeholder=\"Email\"\n                      name=\"email\"\n                    />\n                  )}\n                </Field>\n                <Field name=\"password\" validate={composeValidators(required)}>\n                  {({ input }) => (\n                    <input\n                      {...input}\n                      type=\"password\"\n                      placeholder=\"Mot de passe\"\n                      name=\"password\"\n                    />\n                  )}\n                </Field>\n                <div className=\"form-error-message\">\n                  <FieldErrorMessage\n                    name=\"email\"\n                    when={['required']}\n                    message=\"L'email est requis\"\n                  />\n                  <FieldErrorMessage\n                    name=\"email\"\n                    when={['pattern']}\n                    message=\"Le format de l'email renseigné est incorrect\"\n                  />\n                  <FieldErrorMessage\n                    name=\"password\"\n                    when={['required']}\n                    message=\"Le mot de passe est requis\"\n                  />\n                  {this.state.error && (\n                    <span>{ERROR_MESSAGES[this.state.error]}</span>\n                  )}\n                </div>\n                <button className=\"button\" type=\"submit\">\n                  Se connecter\n                </button>\n                <div className=\"authent-page__signup\">\n                  Vous n'avez pas encore de compte ? <Link to=\"/signup\" className=\"page__inlined-link\">Rejoignez notre communauté dès maintenant !</Link>\n                </div>\n              </form>\n            )}\n          />\n        </div>\n      </div>\n    )\n  }\n}","import React, { Component } from 'react';\nimport { Form, Field } from 'react-final-form';\nimport { Spinner } from 'commons/spinner/spinner.component';\nimport {\n  composeValidators,\n  pattern,\n  required,\n  passwordMinLength,\n  EMAIL_PATTERN\n} from 'commons/forms/validators';\nimport { FieldErrorMessage } from 'commons/forms/field-error.component';\nimport { AuthService } from 'commons/authentication/authentication.service';\nimport { APP_STATES } from 'app/routes';\nimport '../login/login.scss';\n\nconst ERROR_MESSAGES = {\n  USER_EXISTING: \"Un compte est déjà enregistré avec cet email\",\n  TECHNICAL_ERROR: \"Une erreur est survenue, merci de réessayer\"\n}\n\nexport class SignUpPage extends Component {\n  constructor(props) {\n    super(props);\n    this.signup = this.signup.bind(this);\n    this.login = this.login.bind(this);\n    this.state = { isLoading: false };\n  }\n  \n  signup(form) {\n    this.setState({\n      isLoading: true,\n      form,\n    });\n    return AuthService.signUp(form)\n      .then(() => {\n        this.setState({ isAccountCreated: true, isLoading: false });\n      }).catch(({ error = 'TECHNICAL_ERROR' } = {}) => {\n        this.setState({\n          error,\n          isLoading: false,\n        });\n      });\n  }\n\n  login() {\n    this.setState({ isLoading: true });\n    return AuthService.login(this.state.form)\n      .then(() => {\n        this.props.history.replace(APP_STATES.HOME.path);\n      });\n  }\n\n  render() {\n    return this.state.isLoading ? <Spinner /> : (\n      <div className=\"authent-page\">\n        <div className=\"authent-page__form-container\">\n          <Form \n            onSubmit={this.signup}\n            render={({\n              handleSubmit,\n            }) => !this.state.isAccountCreated ? (\n                <form onSubmit={handleSubmit} autoComplete=\"off\" className=\"form\">\n                  <Field name=\"email\" validate={composeValidators(required, pattern(EMAIL_PATTERN))}>\n                    {({ input }) => (\n                      <input\n                        {...input}\n                        type=\"email\"\n                        placeholder=\"Email\"\n                        name=\"email\"\n                      />\n                    )}\n                  </Field>\n                  <Field name=\"username\" validate={composeValidators(required)}>\n                    {({ input }) => (\n                      <input\n                        {...input}\n                        type=\"text\"\n                        placeholder=\"Username\"\n                        name=\"username\"\n                      />\n                    )}\n                  </Field>\n                  <Field name=\"password\" validate={composeValidators(required, passwordMinLength)}>\n                    {({ input }) => (\n                      <input\n                        {...input}\n                        type=\"password\"\n                        placeholder=\"Mot de passe\"\n                        name=\"password\"\n                      />\n                    )}\n                  </Field>\n                  <div className=\"form-error-message\">\n                    <FieldErrorMessage\n                      name=\"email\"\n                      when={['required']}\n                      message=\"L'email est requis\"\n                    />\n                    <FieldErrorMessage\n                      name=\"email\"\n                      when={['pattern']}\n                      message=\"Le format de l'email renseigné est incorrect\"\n                    />\n                    <FieldErrorMessage\n                      name=\"password\"\n                      when={['required']}\n                      message=\"Le mot de passe est requis\"\n                    />\n                    <FieldErrorMessage\n                      name=\"password\"\n                      when={['passwordLength']}\n                      message=\"Le mot de passe doit faire au moins 9 caractères\"\n                    />\n                    {this.state.error && (\n                      <span>{ERROR_MESSAGES[this.state.error]}</span>\n                    )}\n                  </div>\n                  <button type=\"submit\">\n                    Rejoindre la communauté\n                  </button>\n                </form>\n            ) : (\n              <React.Fragment>\n                <div className=\"authent-page__account-created\">\n                  Bienvenue dans la commu {this.state.form.username} !\n                </div>\n                <button onClick={this.login}>\n                  Se connecter\n                </button>\n              </React.Fragment>\n            )}\n          />\n        </div>\n      </div>\n    )\n  }\n}","import { withAuth } from 'commons/authentication/authentication.component';\nimport { Dashboard } from 'modules/dashboard/dashboard.page';\nimport { Team } from 'modules/team/team.page';\n// import { Decks } from 'modules/decks/Decks';\n// import { DECK_ROUTES } from 'modules/decks/route';\nimport { MainTemplate } from 'modules/decks/main-template';\nimport { LoginPage } from 'modules/login/login.page';\nimport { SignUpPage } from 'modules/signup/signup.page';\n\nconst APP_STATES = {\n  HOME: {\n    path: '/',\n    exact: true,\n    component: withAuth(Dashboard),\n  },\n  LOGIN: {\n    path: '/login',\n    component: LoginPage,\n  },\n  SIGNUP: {\n    path: '/signup',\n    component: SignUpPage,\n  },\n  DECKS: {\n    path: '/decks',\n    component: withAuth(MainTemplate),\n  },\n  TEAM: {\n    path: '/team',\n    component: withAuth(Team),\n  }\n}\n\nexport { APP_STATES };","export const Dashboard = (props) => (\n  <div className=\"page\">\n    <div className=\"page__header\">\n      <div className=\"page__header-col\">\n        Dashboard\n      </div>\n    </div>\n    <div className=\"page__content\">\n      Content here\n    </div>\n  </div>\n)","import React from 'react';\nimport _ from 'lodash';\nimport { Route } from 'react-router-dom';\nimport { DECK_ROUTES } from './route';\nimport './decks.scss';\n\nexport const MainTemplate = () => (\n  <React.Fragment>\n    <div className=\"page\">\n      <div className=\"page__header\">\n        <div className=\"page__header-col\">\n          2021-05-12\n        </div>\n      </div>\n      <div className=\"page__content\">\n        {\n        _.values(DECK_ROUTES).map((route, i) => (\n          <Route\n            key={i}\n            path={route.path}\n            exact={route.exact}\n            render={(props) => (\n              <route.component {...props} />\n            )}\n          />\n        ))}\n      </div>\n    </div>\n  </React.Fragment>\n);\n","import React from 'react';\nimport {withRouter, NavLink} from 'react-router-dom';\nimport classNames from 'classnames';\n\nimport { AuthService } from 'commons/authentication/authentication.service';\nimport { UserService } from 'commons/user/user.service';\nimport { Spinner } from 'commons/spinner/spinner.component';\nimport { APP_STATES } from 'app/routes';\nimport './sidebar.scss';\n\nclass SidebarComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      isMenuToggled: false,\n    }\n    this.toggleMenu = this.toggleMenu.bind(this);\n    this.logout = this.logout.bind(this);\n  }\n\n  componentDidMount() {\n    UserService.getSelfUser()\n      .then((user) => {\n        this.setState({\n          user,\n          isLoading: false,\n        });\n      });\n  }\n\n  toggleMenu() {\n    this.setState({\n      isMenuToggled: !this.state.isMenuToggled,\n    });\n  }\n\n  logout() {\n    AuthService.logout();\n    return this.props.history.replace(APP_STATES.LOGIN.path);\n  }\n  \n  render() {\n    return this.state.isLoading\n    ? <Spinner />\n    : (\n      <React.Fragment>\n        <div className=\"sidebar__toggle-menu\" onClick={this.toggleMenu}></div>\n        <div className={classNames('sidebar', { 'sidebar--toggled': this.state.isMenuToggled })}>\n          <div className=\"sidebar__user-card\">\n            <div className=\"sidebar__close-menu\" onClick={this.toggleMenu}></div>\n            <div className=\"sidebar__user-name\">\n              {this.state.user.username}\n            </div>\n            <div className=\"sidebar__user-informations\">\n              <div className=\"sidebar__user-informations-row\">\n                <span className=\"sidebar__user-informations-value\">#7500</span>\n                <span className=\"sidebar__user-informations-trend sidebar__user-informations-trend--up\">+497</span>\n              </div>\n            </div>\n          </div>\n          <nav>\n            <NavLink\n              exact\n              to={APP_STATES.HOME.path}\n              className=\"sidebar__item\" \n              activeClassName=\"sidebar__item--selected\"\n              onClick={this.toggleMenu}\n            >\n              <div className=\"sidebar__item-icon sidebar__item-icon--dashboard\"></div>\n              <span className=\"sidebar__item-label\">Tableau de bord</span>\n            </NavLink>\n\n            <NavLink\n              to={APP_STATES.DECKS.path}\n              className=\"sidebar__item\" \n              activeClassName=\"sidebar__item--selected\"\n              onClick={this.toggleMenu}\n            >\n              <div className=\"sidebar__item-icon sidebar__item-icon--decks\"></div>\n              <span className=\"sidebar__item-label\">Mes decks</span>\n            </NavLink>\n\n            <NavLink\n              to={APP_STATES.TEAM.path}\n              className=\"sidebar__item\" \n              activeClassName=\"sidebar__item--selected\"\n              onClick={this.toggleMenu}\n            >\n              <div className=\"sidebar__item-icon sidebar__item-icon--team\"></div>\n              <span className=\"sidebar__item-label\">Mon équipe</span>\n            </NavLink>)\n          </nav>\n          <div className=\"sidebar__logout\">\n            <button onClick={this.logout}>\n              Se déconnecter\n            </button>\n          </div>\n        </div>\n      </React.Fragment>\n    )\n  }\n}\n\nexport const Sidebar = withRouter(SidebarComponent);","import React from 'react';\nimport classNames from 'classnames';\nimport { Route } from 'react-router-dom';\nimport { AuthService } from 'commons/authentication/authentication.service';\nimport { Sidebar } from 'commons/sidebar/sidebar.component';\nimport { APP_STATES } from './routes';\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      Object.values(APP_STATES).map((route, i) =>\n        <Route\n          key={i}\n          path={route.path} \n          exact={route.exact}\n          render={(props) =>\n            <div className={classNames('app-layout', { 'app-layout--extended':  !AuthService.isAuthenticated() })}>\n              {AuthService.isAuthenticated() && (\n                <Sidebar />\n              )}\n              <route.component {...props}/>\n            </div>\n          }\n        />\n      )\n    )\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport App from './App';\n\nconst initApp = () => {\n  return ReactDOM.render(\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>,\n    document.getElementById(\"root\")\n  );\n}\n\ninitApp();\n"],"sourceRoot":""}