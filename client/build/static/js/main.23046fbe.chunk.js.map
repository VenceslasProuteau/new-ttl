{"version":3,"sources":["commons/authentication/auth-token.service.js","commons/authentication/authentication.api.js","commons/api/api.service.js","commons/authentication/authentication.service.js","commons/authentication/authentication.component.js","commons/spinner/spinner.component.js","commons/forms/field-error.component.js","commons/forms/validators.js","modules/login/login.page.js","modules/signup/signup.page.js","routes.js","modules/dashboard/dashboard.page.js","App.js","index.js"],"names":["AuthTokenService","getAuthToken","Cookies","get","AuthApi","ApiService","login","data","call","method","url","signUp","config","axios","then","result","callAuth","token","headers","AuthTokenServiceModule","AUTH_TOKEN","ClientStore","this","clientCache","AuthService","store","getDomain","window","location","hostname","split","slice","join","logout","domain","remove","reset","set","expires","catch","response","Promise","reject","isAuthenticated","AuthApiModule","withAuth","Component","props","Fragment","className","history","replace","pathname","APP_STATES","LOGIN","path","search","Spinner","FieldErrorMessage","name","when","message","subscription","submitFailed","error","active","render","meta","indexOf","EMAIL_PATTERN","composeValidators","validators","value","reduce","validator","undefined","required","pattern","regexp","RegExp","test","passwordMinLength","length","ERROR_MESSAGES","NOT_EXISTING_USER","INVALID_PASSWORD","LoginPage","redirectUrl","qs","parse","onLogin","bind","state","setState","isLoading","DASHBOARD","href","origin","onSubmit","handleSubmit","autoComplete","validate","input","type","placeholder","to","USER_EXISTING","TECHNICAL_ERROR","SignUpPage","signup","form","isAccountCreated","username","onClick","HOME","exact","component","SIGNUP","App","Object","values","map","route","i","React","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.23046fbe.chunk.js","sourcesContent":["import Cookies from 'js-cookie';\nconst AUTH_TOKEN = 'authToken';\n\nfunction AuthTokenMethod() {\n  return {\n    getAuthToken() {\n      return Cookies.get(AUTH_TOKEN)\n    }\n  }\n}\n\nexport const AuthTokenService = new AuthTokenMethod();\n","import { ApiService as ApiServiceModule } from '../api/api.service';\n\nfunction AuthApiMethod(ApiService) {\n  return {\n    login(data) {\n      return ApiService.call({\n        method: 'POST',\n        url: '/user/login',\n        data,\n      });\n    },\n    signUp(data) {\n      return ApiService.call({\n        method: 'POST',\n        url: '/user/signup',\n        data,\n      });\n    } \n  }\n}\n\nexport const AuthApi = new AuthApiMethod(ApiServiceModule);\n","import axios from 'axios';\nimport { AuthTokenService as AuthTokenServiceModule} from '../authentication/auth-token.service';\n\nconst BASE_URL = '/api/v1';\n\nfunction ApiServiceMethod(AuthTokenService) {\n  return {\n    call(config){\n      return axios({ ...config, url: `${BASE_URL}${config.url}`, method: config.method || 'GET' })\n        .then((result = {}) => result);\n    },\n    callAuth(config)Â {\n      return AuthTokenService.getAuthToken()\n        .then((token) => this.call({\n          ...config,\n          headers: { ...config.headers, token }\n        }));\n    }\n  }\n};\n\nexport const ApiService = new ApiServiceMethod(AuthTokenServiceModule);\n","import Cookies from 'js-cookie';\nimport { AuthApi as AuthApiModule } from './authentication.api';\n\nconst AUTH_TOKEN = 'authToken';\n\nclass ClientStore {\n  constructor() {\n    this.clientCache = {};\n  }\n\n  get() {\n    return this.clientCache;\n  }\n\n  set(data = {}) {\n    this.clientCache = { ...this.clientCache, ...data };\n  }\n\n  reset() {\n    this.clientCache = {};\n  }\n}\n\n\nfunction AuthServiceMethod(AuthApi) {\n  const store = new ClientStore();\n\n  return {\n    getDomain(){\n      window.location.hostname.split('.').slice(-2).join('.');\n    },\n    logout() {\n      const domain = this.getDomain();\n      Cookies.remove(AUTH_TOKEN, { domain });\n      store.reset();\n    },\n    login(data) {\n      return AuthApi.login(data)\n        .then(({ data: { token } } = {}) => {\n          Cookies.set(AUTH_TOKEN, token, {\n            expires: 30,\n            domain: this.getDomain(),\n          });\n        }).catch(({ response: { data } } = {}) => Promise.reject(data))\n    },\n    signUp(data) {\n      return AuthApi.signUp(data)\n        .catch(({ response: { data } } = {}) => Promise.reject(data))\n    },\n    isAuthenticated() {\n      return !!Cookies.get(AUTH_TOKEN)\n    }\n  }\n}\n\nexport const AuthService = new AuthServiceMethod(AuthApiModule);\n","import React from 'react';\nimport { AuthService } from './authentication.service';\nimport { APP_STATES } from 'app/routes';\nimport '../../app.scss';\n\nexport const withAuth = Component => (props) => {\n  if (!AuthService.isAuthenticated()) {\n    props.history.replace({\n      pathname: APP_STATES.LOGIN.path,\n      search: `?redirectUrl=${props.location.pathname}`,\n    });\n    return null;\n  }\n\n  return (\n    <React.Fragment>\n      <div className=\"app__menu-toggle\"></div>\n      {/* <Sidebar /> */}\n      <div className=\"app\">\n        <div className=\"layout-container\">\n          <Component {...props} />\n        </div>\n      </div>\n    </React.Fragment>\n  )\n}","import React from 'react';\nimport './spinner.scss';\n\nexport const Spinner = () => (\n  <div className=\"spinner-container\">\n    <div className=\"spinner\" />\n  </div>\n)","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Field, FormSpy } from 'react-final-form';\nimport './field-error.scss';\n\nexport const FieldErrorMessage = ({ name = [], when = [], message = '' }) => (\n  <Field\n    name={name}\n    subscription={{ submitFailed: true, error: true, active: true }}\n    render={({ meta: { submitFailed, error, active } }) => (\n      !active && submitFailed && error && (when ? when.indexOf(error) >= 0 : true)\n        ? <span className=\"form-error-message\">{message || error}</span> : null\n    )}\n  />\n);\n","export const EMAIL_PATTERN = /.+@.+\\..+/;\nexport const PHONE_PATTERN = /^$|^0[12345679][0-9]{8}$/;\n\nexport const composeValidators = (...validators) => (\n  (value) => validators.reduce((error, validator) => error || validator(value), undefined)\n);\n\n// validators\nexport const required = (value) => (value ? undefined : 'required');\n\nexport const pattern = (regexp) => (value = '') => (new RegExp(regexp).test(value) ? undefined : 'pattern');\n\nexport const passwordMinLength = value => value.length < 9 ? 'passwordLength' : undefined;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Form, Field } from 'react-final-form';\nimport qs from 'query-string';\nimport { Spinner } from 'commons/spinner/spinner.component';\nimport {Â FieldErrorMessage } from 'commons/forms/field-error.component';\nimport {\n  composeValidators,\n  pattern,\n  required,\n  EMAIL_PATTERN\n} from 'commons/forms/validators';\nimport { AuthService } from 'commons/authentication/authentication.service';\nimport { APP_STATES } from 'app/routes';\nimport './login.scss';\n\nconst ERROR_MESSAGES = {\n  NOT_EXISTING_USER: \"L'email renseignÃ© n'existe pas\",\n  INVALID_PASSWORD: \"Le mot de passe renseignÃ© est incorrect\"\n}\n\nexport class LoginPage extends Component {\n  constructor(props) {\n    super(props);\n    this.redirectUrl = qs.parse(props.location.search).redirectUrl;\n    this.onLogin = this.onLogin.bind(this);\n    this.state =Â {\n      error: false,\n    };\n  }\n  \n  onLogin(data) {\n    this.setState({ isLoading: true });\n    return AuthService.login(data)\n      .then(() => {\n        if (!this.redirectUrl) {\n          return this.props.history.replace(APP_STATES.DASHBOARD.path);\n        }\n        window.location.href = `${window.location.origin}${this.redirectUrl}`;\n      }).catch(({Â error }) => this.setState({ error, isLoading: false }));\n  }\n\n  render() {\n    return this.state.isLoading ? <Spinner /> : (\n      <div className=\"authent-page\">\n        <div className=\"authent-page__form-container\">\n          <Form \n            onSubmit={this.onLogin}\n            render={({\n              handleSubmit,\n            }) => (\n              <form onSubmit={handleSubmit} autoComplete=\"off\">\n                <Field name=\"email\" validate={composeValidators(required, pattern(EMAIL_PATTERN))}>\n                  {({ input }) => (\n                    <input\n                      {...input}\n                      type=\"email\"\n                      placeholder=\"Email\"\n                      name=\"email\"\n                    />\n                  )}\n                </Field>\n                <Field name=\"password\" validate={composeValidators(required)}>\n                  {({ input }) => (\n                    <input\n                      {...input}\n                      type=\"password\"\n                      placeholder=\"Mot de passe\"\n                      name=\"password\"\n                    />\n                  )}\n                </Field>\n                <div className=\"form-error-message\">\n                  <FieldErrorMessage\n                    name=\"email\"\n                    when={['required']}\n                    message=\"L'email est requis\"\n                  />\n                  <FieldErrorMessage\n                    name=\"email\"\n                    when={['pattern']}\n                    message=\"Le format de l'email renseignÃ© est incorrect\"\n                  />\n                  <FieldErrorMessage\n                    name=\"password\"\n                    when={['required']}\n                    message=\"Le mot de passe est requis\"\n                  />\n                  {this.state.error && (\n                    <span>{ERROR_MESSAGES[this.state.error]}</span>\n                  )}\n                </div>\n                <button className=\"button\" type=\"submit\">\n                  Se connecter\n                </button>\n                <div className=\"authent-page__signup\">\n                  Vous n'avez pas encore de compte ? <Link to=\"/signup\" className=\"page__inlined-link\">Rejoignez notre communautÃ© dÃ¨s maintenant !</Link>\n                </div>\n              </form>\n            )}\n          />\n        </div>\n      </div>\n    )\n  }\n}","import React, { Component } from 'react';\nimport { Form, Field } from 'react-final-form';\nimport { Spinner } from 'commons/spinner/spinner.component';\nimport {\n  composeValidators,\n  pattern,\n  required,\n  passwordMinLength,\n  EMAIL_PATTERN\n} from 'commons/forms/validators';\nimport {Â FieldErrorMessage } from 'commons/forms/field-error.component';\nimport { AuthService } from 'commons/authentication/authentication.service';\nimport {Â APP_STATES } from 'app/routes';\nimport '../login/login.scss';\n\nconst ERROR_MESSAGES = {\n  USER_EXISTING: \"Un compte est dÃ©jÃ  enregistrÃ© avec cet email\",\n  TECHNICAL_ERROR: \"Une erreur est survenue, merci de rÃ©essayer\"\n}\n\nexport class SignUpPage extends Component {\n  constructor(props) {\n    super(props);\n    this.signup = this.signup.bind(this);\n    this.login = this.login.bind(this);\n    this.state = { isLoading: false };\n  }\n  \n  signup(form) {\n    this.setState({\n      isLoading: true,\n      form,\n    });\n    return AuthService.signUp(form)\n      .then(() => {\n        this.setState({ isAccountCreated: true, isLoading: false });\n      }).catch(({Â error = 'TECHNICAL_ERROR' } = {}) => {\n        this.setState({\n          error,\n          isLoading: false,\n        });\n      });\n  }\n\n  login() {\n    this.setState({ isLoading: true });\n    return AuthService.login(this.state.form)\n      .then(() => {\n        this.props.history.replace(APP_STATES.DASHBOARD.path);\n      });\n  }\n\n  render() {\n    return this.state.isLoading ? <Spinner /> : (\n      <div className=\"authent-page\">\n        <div className=\"authent-page__form-container\">\n          <Form \n            onSubmit={this.signup}\n            render={({\n              handleSubmit,\n            }) => !this.state.isAccountCreated ? (\n                <form onSubmit={handleSubmit} autoComplete=\"off\">\n                  <Field name=\"email\" validate={composeValidators(required, pattern(EMAIL_PATTERN))}>\n                    {({ input }) => (\n                      <input\n                        {...input}\n                        type=\"email\"\n                        placeholder=\"Email\"\n                        name=\"email\"\n                      />\n                    )}\n                  </Field>\n                  <Field name=\"username\" validate={composeValidators(required)}>\n                    {({ input }) => (\n                      <input\n                        {...input}\n                        type=\"text\"\n                        placeholder=\"Username\"\n                        name=\"username\"\n                      />\n                    )}\n                  </Field>\n                  <Field name=\"password\" validate={composeValidators(required, passwordMinLength)}>\n                    {({ input }) => (\n                      <input\n                        {...input}\n                        type=\"password\"\n                        placeholder=\"Mot de passe\"\n                        name=\"password\"\n                      />\n                    )}\n                  </Field>\n                  <div className=\"form-error-message\">\n                    <FieldErrorMessage\n                      name=\"email\"\n                      when={['required']}\n                      message=\"L'email est requis\"\n                    />\n                    <FieldErrorMessage\n                      name=\"email\"\n                      when={['pattern']}\n                      message=\"Le format de l'email renseignÃ© est incorrect\"\n                    />\n                    <FieldErrorMessage\n                      name=\"password\"\n                      when={['required']}\n                      message=\"Le mot de passe est requis\"\n                    />\n                    <FieldErrorMessage\n                      name=\"password\"\n                      when={['passwordLength']}\n                      message=\"Le mot de passe doit faire au moins 9 caractÃ¨res\"\n                    />\n                    {this.state.error && (\n                      <span>{ERROR_MESSAGES[this.state.error]}</span>\n                    )}\n                  </div>\n                  <button type=\"submit\">\n                    Rejoindre la communautÃ©\n                  </button>\n                </form>\n            ) : (\n              <React.Fragment>\n                <div className=\"authent-page__account-created\">\n                  Bienvenue dans la commu {this.state.form.username} !\n                </div>\n                <button onClick={this.login}>\n                  Se connecter\n                </button>\n              </React.Fragment>\n            )}\n          />\n        </div>\n      </div>\n    )\n  }\n}","import { withAuth } from 'commons/authentication/authentication.component';\nimport { Dashboard } from 'modules/dashboard/dashboard.page';\n// import { Team } from 'modules/team/Team';\n// import { Decks } from 'modules/decks/Decks';\n// import { DECK_ROUTES } from 'modules/decks/route';\n// import {Â MainTemplate } from 'modules/decks/main-template';\nimport { LoginPage } from 'modules/login/login.page';\nimport { SignUpPage } from 'modules/signup/signup.page';\n\nconst EntryRedirect = (props) => {\n  props.history.replace(APP_STATES.DASHBOARD.path);\n  return null;  \n}\n\nconst APP_STATES = {\n  HOME: {\n    path: '/',\n    exact: true,\n    component: withAuth(EntryRedirect),\n  },\n  LOGIN: {\n    path: '/login',\n    component: LoginPage,\n  },\n  SIGNUP: {\n    path: '/signup',\n    component: SignUpPage,\n  },\n  DASHBOARD: {\n    path: '/dashboard',\n    component: withAuth(Dashboard),\n  },\n  // DECKS: {\n  //   path: '/decks',\n  //   component: MainTemplate\n  // },\n  // TEAM: {\n  //   path: '/team',\n  //   component: Team,\n  // }\n}\n\nexport { APP_STATES };","export const Dashboard = () => (\n  <div>Dashboard</div>\n)","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport { APP_STATES } from './routes';\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      Object.values(APP_STATES).map((route, i) =>\n        <Route\n          key={i}\n          path={route.path} \n          exact={route.exact}\n          render={props =>\n            <route.component {...props}/>\n          }\n        />\n      )\n    )\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport App from './App';\n\nconst initApp = () => {\n  return ReactDOM.render(\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>,\n    document.getElementById(\"root\")\n  );\n}\n\ninitApp();\n"],"sourceRoot":""}